import React, { useEffect, useState } from 'react';
import * as XLSX from 'xlsx';
import '../App.css';

const RainfallAlertSystem = () => {
    const [municipalities, setMunicipalities] = useState([]);
    const [fileName, setFileName] = useState('');

    const targetProvinces = [
        "Abra", "Apayao", "Benguet", "Ifugao", "Kalinga", "Mountain Province"
    ];

    const handleFileUpload = (e) => {
        const file = e.target.files[0];
        if (!file) return;

        setFileName(file.name);

        const reader = new FileReader();
        reader.onload = (event) => {
            const binaryStr = event.target.result;
            const workbook = XLSX.read(binaryStr, { type: 'binary' });
            const sheet = workbook.Sheets[workbook.SheetNames[0]];
            const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });

            if (data.length < 2) return;

            const extractedMunicipalities = [];

            data.slice(1).forEach(row => {
                const municipalityRaw = row[1]; // Column B (index 1)
                const rainfallRaw = row[6]; // Column G (index 6)

                if (municipalityRaw) {
                    const municipality = municipalityRaw.split(" (")[0].trim().replace(/\s+/g, "_");
                    const provinceMatch = municipalityRaw.match(/\((.*?)\)/);
                    const province = provinceMatch ? provinceMatch[1].trim() : "";

                    if (province && targetProvinces.includes(province)) {
                        extractedMunicipalities.push([municipality, rainfallRaw])
                    }
                }
            });

            setMunicipalities(extractedMunicipalities);
            console.log(extractedMunicipalities);
        };

        reader.readAsBinaryString(file);
    };

    // Province mapping for each municipality
    const provinceData = {
        "Calanasan": "Apayao",
        "Conner": "Apayao",
        "Flora": "Apayao",
        "Kabugao": "Apayao",
        "Luna": "Apayao",
        "Pudtol": "Apayao",
        "Santa_Marcela": "Apayao",
    
        // Benguet
        "Atok": "Benguet",
        "Bakun": "Benguet",
        "Itogon": "Benguet",
        "Buguias": "Benguet",
        "Baguio_City": "Benguet",
        "La_Trinidad": "Benguet",
        "Tuba": "Benguet",
        "Bokod": "Benguet",
        "Kabayan": "Benguet",
        "Kapangan": "Benguet",
        "Kibungan": "Benguet",
        "Mankayan": "Benguet",
        "Sablan": "Benguet",
        "Tublay": "Benguet",
    
        // Ifugao
        "Alfonso_Lista": "Ifugao",
        "Aguinaldo": "Ifugao",
        "Asipulo": "Ifugao",
        "Banaue": "Ifugao",
        "Hingyon": "Ifugao",
        "Lamut": "Ifugao",
        "Hungduan": "Ifugao",
        "Kiangan": "Ifugao",
        "Lagawe": "Ifugao",
        "Mayoyao": "Ifugao",
        "Tinoc": "Ifugao",
    
        // Kalinga
        "Tabuk_City": "Kalinga",
        "Pinukpuk": "Kalinga",
        "Balbalan": "Kalinga",
        "Pasil": "Kalinga",
        "Tanudan": "Kalinga",
        "Lubuagan": "Kalinga",
        "Rizal": "Kalinga",
        "Tinglayan": "Kalinga",
    
        // Mountain Province
        "Bauko": "MP",
        "Barlig": "MP",
        "Besao": "MP",
        "Bontoc": "MP",
        "Sabangan": "MP",
        "Sadanga": "MP",
        "Tadian": "MP",
        "Sagada": "MP",
        "Natonin": "MP",
        "Paracelis": "MP",
    
        // Abra
        "Bangued": "Abra",
        "Peñarrubia": "Abra",
        "Pe├â┬▒arrubia" : "Abra",
        "Tayum": "Abra",
        "Boliney": "Abra",
        "Bucay": "Abra",
        "Bucloc": "Abra",
        "Daguioman": "Abra",
        "Danglas": "Abra",
        "Dolores": "Abra",
        "La_Paz": "Abra",
        "Lacub": "Abra",
        "Lagangilang": "Abra",
        "Lagayan": "Abra",
        "Langiden": "Abra",
        "Licuan-Baay": "Abra",
        "Luba": "Abra",
        "Malibcong": "Abra",
        "Manabo": "Abra",
        "Pidigan": "Abra",
        "Pilar": "Abra",
        "Sallapadan": "Abra",
        "San_Isidro": "Abra",
        "San_Juan": "Abra",
        "San_Quintin": "Abra",
        "Tineg": "Abra",
        "Tubo": "Abra",
        "Villaviciosa": "Abra"
    };

    const getImagePath = (municipality, rainfall) => {
        let colorFolder = '';

        switch (rainfall) {
            case 'NO RAIN':
                colorFolder = 'Green';
                break;
            case 'LIGHT RAINS':
                colorFolder = 'Yellow';
                break;
            case 'MODERATE RAINS':
                colorFolder = 'Orange';
                break;
            case 'HEAVY RAINS':
                colorFolder = 'Red';
                break;
            default:
                colorFolder = 'Unknown';
        }

        const province = provinceData[municipality] || 'UnknownProvince';
        console.log(`/Images/${province}/${colorFolder}/${municipality}.png`)

        return `/Images/${province}/${colorFolder}/${municipality}.png`;
    };

    return (
        <div className="rainfall-alert-system">
            <div>
            <h1>Rainfall Alert System</h1>
            <div>
                <input 
                    type="file" 
                    accept=".xlsx, .xls" 
                    onChange={handleFileUpload} 
                />
                <p>{fileName ? `Uploaded: ${fileName}` : 'No file uploaded yet'}</p>
            </div>

            <div id="legend">
                <div><span style={{ backgroundColor: 'green' }}></span> NO RAIN</div>
                <div><span style={{ backgroundColor: 'yellow' }}></span> LIGHT RAINS</div>
                <div><span style={{ backgroundColor: 'orange' }}></span> MODERATE RAINS</div>
                <div><span style={{ backgroundColor: 'red' }}></span> HEAVY RAINS</div>
            </div>
            </div>

            <div id="map-container">
                {municipalities.map(([municipality, rainfall], index) => (
                    <img 
                        key={index} 
                        id={municipality.replace(/\s+/g, '_')} 
                        className="municipality" 
                        alt={municipality} 
                        src={getImagePath(municipality, rainfall)} 
                    />
                ))}
            </div>

            <div>
                <h2>Municipalities in the Region</h2>
                <ul>
                    {municipalities.map(([mun, rain], index) => (
                        <li key={index}>{mun} - {rain}</li>
                    ))}
                </ul>
            </div>
        </div>
    );
};

export default RainfallAlertSystem;

